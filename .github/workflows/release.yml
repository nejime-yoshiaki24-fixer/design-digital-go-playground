name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build all packages
        run: |
          npm run build:components
          cd packages/mcp-server && uv build

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: |
            {
              "template": "## 変更内容\n\n#{{CHANGELOG}}\n\n",
              "categories": [
                {
                  "title": "## ✨ 新機能",
                  "labels": ["enhancement", "feature"]
                },
                {
                  "title": "## 🐛 バグ修正",
                  "labels": ["bug", "fix"]
                },
                {
                  "title": "## 🔧 メンテナンス",
                  "labels": ["chore", "maintenance"]
                },
                {
                  "title": "## 📝 ドキュメント",
                  "labels": ["documentation"]
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            packages/components/build/**
            packages/mcp-server/dist/*
          body: ${{ steps.changelog.outputs.changelog }}
          generateReleaseNotes: true
          draft: false
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}

  publish-npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    if: "!contains(github.ref, '-beta') && !contains(github.ref, '-alpha')"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build:components

      - name: Publish to npm
        run: |
          cd packages/components
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}