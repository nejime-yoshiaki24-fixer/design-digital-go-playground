name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-components:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/components

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"

      - name: Install dependencies
        run: npm ci
        working-directory: .

      - name: Run tests
        run: npm test -- --watchAll=false
        working-directory: packages/components

      - name: Build
        run: npm run build
        working-directory: packages/components

  test-visual:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/components

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Cache visual test baselines
        uses: actions/cache@v3
        with:
          path: packages/components/screenshots/baseline
          key: visual-baselines-${{ hashFiles('packages/components/screenshots/baseline/**') }}
          restore-keys: |
            visual-baselines-

      - name: Install dependencies
        run: npm ci
        working-directory: .

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
        working-directory: packages/components

      - name: Run visual tests
        run: npm run test:visual
        working-directory: packages/components

      - name: Upload visual test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: visual-test-report
          path: packages/components/visual-test-report/
          retention-days: 30

  test-mcp-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/mcp-server

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install dependencies
        run: uv sync

      - name: Run tests
        run: uv run pytest

  deploy-storybook:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test-components]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook
        run: npm run build-storybook
        working-directory: packages/components

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: packages/components/storybook-static
